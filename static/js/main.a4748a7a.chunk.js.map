{"version":3,"sources":["utilities/useFetchJobs.js","components/Job.js","components/JobsPagination.js","SearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","src","company_logo","alt","height","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","page","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","cancelToken2","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","length","cancel","useFetchJobs","Container","e","param","target","prevParams","Spinner","animation","role","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4748a7a.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\n\nimport axios from 'axios'\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = \"https://jobs.github.com/positions.json\"\n\nfunction reducer(state, action){\n  //reducer function called every time we call dispatch, whatever is passed is held in action variable\n  switch(action.type){\n    case ACTIONS.MAKE_REQUEST:\n      return {\n        loading: true,\n        jobs: []\n      }\n    case ACTIONS.GET_DATA:\n      return {\n        ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      }\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      }\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return {\n        ...state,\n        hasNextPage: action.payload.hasNextPage\n      }\n    default:\n      return state\n  }\n\n\n}\n\nexport default function useFetchJobs( params, page ){\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n  useEffect( () => {\n    const cancelToken1 = axios.CancelToken.source()\n    const cancelToken2 = axios.CancelToken.source()\n\n    dispatch({ type: ACTIONS.MAKE_REQUEST})\n\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then( res => {\n      //save data to state by calling get data action\n      dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n    }).catch(err => {\n      if(axios.isCancel(err)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: err } })\n    })\n\n    axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then( res => {\n      //save data to state by calling get data action\n      dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\n    }).catch(err => {\n      if(axios.isCancel(err)) return\n      dispatch({ type: ACTIONS.ERROR, payload: { error: err } })\n    })\n\n    return() => {\n      cancelToken2.cancel()\n    }\n\n  }, [params, page])\n\n\n  return state\n\n\n}","import React, { useState } from 'react'\n\n//React Bootstrap\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\n\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n  const [ open, setOpen] = useState(false)\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary mr-2\">{job.type}</Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: 'break-all' }}>\n              <ReactMarkdown className=\"mt-2\" source={job.how_to_apply} />\n            </div>\n          </div>\n\n\n          <img src={job.company_logo} alt={job.company} className=\"d-none d-md-block\" height=\"50\"/>\n        </div>\n        <Card.Text>\n          <Button\n            onClick={ () => setOpen(prevOpen => !prevOpen )}\n            variant=\"primary\"\n          >{open ? 'Hide' : 'View'} Details</Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n  function adjustPage(amount) {\n    setPage(prevPage => prevPage + amount)\n  }\n\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n      {page > 2 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  )\n}","import React from 'react'\n\nimport { Form, Col } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onParamChange }) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.description}\n            name=\"description\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.location}\n            name=\"location\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={ Col } xs=\"auto\" className=\"ml-2\">\n          <Form.Check\n            onChange={onParamChange}\n            value={params.full_time}\n            name=\"full_time\"\n            id=\"full-time\"\n            label=\"Only Full Time\"\n            type=\"checkbox\"\n            className=\"mb-2\"\n          />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  )\n}\n","import {useState} from 'react'\nimport useFetchJobs from './utilities/useFetchJobs'\nimport { Container, Spinner } from 'react-bootstrap'\n\nimport Job from './components/Job.js'\nimport JobsPagination from './components/JobsPagination'\nimport SearchForm from './SearchForm'\n\nfunction App() {\n  const [ params, setParams] = useState({})\n  const [ page, setPage] = useState(1)\n\n  const { jobs, loading, error, hasNextPage  } = useFetchJobs( params, page )\n\n  function handleParamChange(e){\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n\n  }\n\n  return (\n    \n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">Github Jobs</h1>\n      <SearchForm params={ params } onParamChange={ handleParamChange }/>\n      <JobsPagination  page={page} setPage={setPage} hasNextPage={ hasNextPage } />\n      { loading && (\n        <Spinner className=\"mb-3\" animation=\"border\" role=\"status\" variant=\"primary\" >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )}\n      { error && <h1>Error. Try refreshing.</h1>}\n      {jobs.map( job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination  page={page} setPage={setPage} hasNextPage={ hasNextPage } />\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}